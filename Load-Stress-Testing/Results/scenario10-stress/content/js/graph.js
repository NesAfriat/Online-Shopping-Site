/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 1425.0, "series": [{"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 3.0], [30.5, 3.0], [30.6, 3.0], [30.7, 3.0], [30.8, 3.0], [30.9, 3.0], [31.0, 3.0], [31.1, 3.0], [31.2, 3.0], [31.3, 3.0], [31.4, 3.0], [31.5, 3.0], [31.6, 3.0], [31.7, 3.0], [31.8, 3.0], [31.9, 3.0], [32.0, 3.0], [32.1, 3.0], [32.2, 3.0], [32.3, 3.0], [32.4, 3.0], [32.5, 3.0], [32.6, 3.0], [32.7, 3.0], [32.8, 3.0], [32.9, 3.0], [33.0, 3.0], [33.1, 3.0], [33.2, 3.0], [33.3, 3.0], [33.4, 3.0], [33.5, 3.0], [33.6, 3.0], [33.7, 3.0], [33.8, 3.0], [33.9, 3.0], [34.0, 3.0], [34.1, 3.0], [34.2, 3.0], [34.3, 3.0], [34.4, 3.0], [34.5, 3.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 3.0], [36.2, 3.0], [36.3, 3.0], [36.4, 3.0], [36.5, 3.0], [36.6, 3.0], [36.7, 3.0], [36.8, 3.0], [36.9, 3.0], [37.0, 3.0], [37.1, 3.0], [37.2, 3.0], [37.3, 3.0], [37.4, 3.0], [37.5, 3.0], [37.6, 3.0], [37.7, 3.0], [37.8, 3.0], [37.9, 3.0], [38.0, 3.0], [38.1, 3.0], [38.2, 3.0], [38.3, 3.0], [38.4, 3.0], [38.5, 3.0], [38.6, 3.0], [38.7, 3.0], [38.8, 3.0], [38.9, 3.0], [39.0, 3.0], [39.1, 3.0], [39.2, 3.0], [39.3, 3.0], [39.4, 3.0], [39.5, 3.0], [39.6, 3.0], [39.7, 3.0], [39.8, 3.0], [39.9, 3.0], [40.0, 3.0], [40.1, 3.0], [40.2, 3.0], [40.3, 3.0], [40.4, 3.0], [40.5, 3.0], [40.6, 3.0], [40.7, 3.0], [40.8, 3.0], [40.9, 3.0], [41.0, 3.0], [41.1, 3.0], [41.2, 3.0], [41.3, 3.0], [41.4, 3.0], [41.5, 3.0], [41.6, 3.0], [41.7, 3.0], [41.8, 3.0], [41.9, 3.0], [42.0, 3.0], [42.1, 3.0], [42.2, 3.0], [42.3, 3.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 3.0], [42.8, 3.0], [42.9, 3.0], [43.0, 3.0], [43.1, 3.0], [43.2, 3.0], [43.3, 3.0], [43.4, 3.0], [43.5, 3.0], [43.6, 3.0], [43.7, 3.0], [43.8, 3.0], [43.9, 3.0], [44.0, 3.0], [44.1, 3.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 3.0], [57.5, 3.0], [57.6, 3.0], [57.7, 3.0], [57.8, 3.0], [57.9, 3.0], [58.0, 3.0], [58.1, 3.0], [58.2, 3.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 3.0], [64.5, 3.0], [64.6, 3.0], [64.7, 3.0], [64.8, 3.0], [64.9, 3.0], [65.0, 3.0], [65.1, 3.0], [65.2, 3.0], [65.3, 3.0], [65.4, 3.0], [65.5, 3.0], [65.6, 3.0], [65.7, 3.0], [65.8, 3.0], [65.9, 3.0], [66.0, 3.0], [66.1, 3.0], [66.2, 3.0], [66.3, 3.0], [66.4, 3.0], [66.5, 3.0], [66.6, 3.0], [66.7, 3.0], [66.8, 3.0], [66.9, 3.0], [67.0, 3.0], [67.1, 3.0], [67.2, 3.0], [67.3, 3.0], [67.4, 3.0], [67.5, 3.0], [67.6, 3.0], [67.7, 3.0], [67.8, 3.0], [67.9, 3.0], [68.0, 3.0], [68.1, 3.0], [68.2, 3.0], [68.3, 3.0], [68.4, 3.0], [68.5, 3.0], [68.6, 3.0], [68.7, 3.0], [68.8, 3.0], [68.9, 3.0], [69.0, 3.0], [69.1, 3.0], [69.2, 3.0], [69.3, 3.0], [69.4, 3.0], [69.5, 3.0], [69.6, 3.0], [69.7, 3.0], [69.8, 3.0], [69.9, 3.0], [70.0, 4.0], [70.1, 4.0], [70.2, 4.0], [70.3, 4.0], [70.4, 4.0], [70.5, 4.0], [70.6, 4.0], [70.7, 4.0], [70.8, 4.0], [70.9, 4.0], [71.0, 4.0], [71.1, 4.0], [71.2, 4.0], [71.3, 4.0], [71.4, 4.0], [71.5, 4.0], [71.6, 4.0], [71.7, 4.0], [71.8, 4.0], [71.9, 4.0], [72.0, 4.0], [72.1, 4.0], [72.2, 4.0], [72.3, 4.0], [72.4, 4.0], [72.5, 4.0], [72.6, 4.0], [72.7, 4.0], [72.8, 4.0], [72.9, 4.0], [73.0, 4.0], [73.1, 4.0], [73.2, 4.0], [73.3, 4.0], [73.4, 4.0], [73.5, 4.0], [73.6, 4.0], [73.7, 4.0], [73.8, 4.0], [73.9, 4.0], [74.0, 4.0], [74.1, 4.0], [74.2, 4.0], [74.3, 4.0], [74.4, 4.0], [74.5, 4.0], [74.6, 4.0], [74.7, 4.0], [74.8, 4.0], [74.9, 4.0], [75.0, 4.0], [75.1, 4.0], [75.2, 4.0], [75.3, 4.0], [75.4, 4.0], [75.5, 4.0], [75.6, 4.0], [75.7, 4.0], [75.8, 4.0], [75.9, 4.0], [76.0, 4.0], [76.1, 4.0], [76.2, 4.0], [76.3, 4.0], [76.4, 4.0], [76.5, 4.0], [76.6, 4.0], [76.7, 4.0], [76.8, 4.0], [76.9, 4.0], [77.0, 4.0], [77.1, 4.0], [77.2, 4.0], [77.3, 4.0], [77.4, 4.0], [77.5, 4.0], [77.6, 4.0], [77.7, 4.0], [77.8, 4.0], [77.9, 4.0], [78.0, 4.0], [78.1, 4.0], [78.2, 4.0], [78.3, 4.0], [78.4, 4.0], [78.5, 4.0], [78.6, 4.0], [78.7, 4.0], [78.8, 4.0], [78.9, 4.0], [79.0, 4.0], [79.1, 4.0], [79.2, 4.0], [79.3, 4.0], [79.4, 4.0], [79.5, 4.0], [79.6, 4.0], [79.7, 4.0], [79.8, 4.0], [79.9, 4.0], [80.0, 9.0], [80.1, 9.0], [80.2, 9.0], [80.3, 9.0], [80.4, 9.0], [80.5, 9.0], [80.6, 9.0], [80.7, 9.0], [80.8, 9.0], [80.9, 9.0], [81.0, 9.0], [81.1, 9.0], [81.2, 9.0], [81.3, 9.0], [81.4, 9.0], [81.5, 9.0], [81.6, 9.0], [81.7, 9.0], [81.8, 9.0], [81.9, 9.0], [82.0, 9.0], [82.1, 9.0], [82.2, 9.0], [82.3, 9.0], [82.4, 9.0], [82.5, 9.0], [82.6, 9.0], [82.7, 9.0], [82.8, 9.0], [82.9, 9.0], [83.0, 9.0], [83.1, 9.0], [83.2, 9.0], [83.3, 9.0], [83.4, 9.0], [83.5, 9.0], [83.6, 9.0], [83.7, 9.0], [83.8, 9.0], [83.9, 9.0], [84.0, 9.0], [84.1, 9.0], [84.2, 9.0], [84.3, 9.0], [84.4, 9.0], [84.5, 9.0], [84.6, 9.0], [84.7, 9.0], [84.8, 9.0], [84.9, 9.0], [85.0, 9.0], [85.1, 9.0], [85.2, 9.0], [85.3, 9.0], [85.4, 9.0], [85.5, 9.0], [85.6, 9.0], [85.7, 9.0], [85.8, 9.0], [85.9, 9.0], [86.0, 9.0], [86.1, 9.0], [86.2, 9.0], [86.3, 9.0], [86.4, 9.0], [86.5, 9.0], [86.6, 9.0], [86.7, 9.0], [86.8, 9.0], [86.9, 9.0], [87.0, 9.0], [87.1, 9.0], [87.2, 9.0], [87.3, 9.0], [87.4, 9.0], [87.5, 9.0], [87.6, 9.0], [87.7, 9.0], [87.8, 9.0], [87.9, 9.0], [88.0, 9.0], [88.1, 9.0], [88.2, 9.0], [88.3, 9.0], [88.4, 9.0], [88.5, 9.0], [88.6, 9.0], [88.7, 9.0], [88.8, 9.0], [88.9, 9.0], [89.0, 9.0], [89.1, 9.0], [89.2, 9.0], [89.3, 9.0], [89.4, 9.0], [89.5, 9.0], [89.6, 9.0], [89.7, 9.0], [89.8, 9.0], [89.9, 9.0], [90.0, 10.0], [90.1, 10.0], [90.2, 10.0], [90.3, 10.0], [90.4, 10.0], [90.5, 10.0], [90.6, 10.0], [90.7, 10.0], [90.8, 10.0], [90.9, 10.0], [91.0, 10.0], [91.1, 10.0], [91.2, 10.0], [91.3, 10.0], [91.4, 10.0], [91.5, 10.0], [91.6, 10.0], [91.7, 10.0], [91.8, 10.0], [91.9, 10.0], [92.0, 10.0], [92.1, 10.0], [92.2, 10.0], [92.3, 10.0], [92.4, 10.0], [92.5, 10.0], [92.6, 10.0], [92.7, 10.0], [92.8, 10.0], [92.9, 10.0], [93.0, 10.0], [93.1, 10.0], [93.2, 10.0], [93.3, 10.0], [93.4, 10.0], [93.5, 10.0], [93.6, 10.0], [93.7, 10.0], [93.8, 10.0], [93.9, 10.0], [94.0, 10.0], [94.1, 10.0], [94.2, 10.0], [94.3, 10.0], [94.4, 10.0], [94.5, 10.0], [94.6, 10.0], [94.7, 10.0], [94.8, 10.0], [94.9, 10.0], [95.0, 10.0], [95.1, 10.0], [95.2, 10.0], [95.3, 10.0], [95.4, 10.0], [95.5, 10.0], [95.6, 10.0], [95.7, 10.0], [95.8, 10.0], [95.9, 10.0], [96.0, 10.0], [96.1, 10.0], [96.2, 10.0], [96.3, 10.0], [96.4, 10.0], [96.5, 10.0], [96.6, 10.0], [96.7, 10.0], [96.8, 10.0], [96.9, 10.0], [97.0, 10.0], [97.1, 10.0], [97.2, 10.0], [97.3, 10.0], [97.4, 10.0], [97.5, 10.0], [97.6, 10.0], [97.7, 10.0], [97.8, 10.0], [97.9, 10.0], [98.0, 10.0], [98.1, 10.0], [98.2, 10.0], [98.3, 10.0], [98.4, 10.0], [98.5, 10.0], [98.6, 10.0], [98.7, 10.0], [98.8, 10.0], [98.9, 10.0], [99.0, 10.0], [99.1, 10.0], [99.2, 10.0], [99.3, 10.0], [99.4, 10.0], [99.5, 10.0], [99.6, 10.0], [99.7, 10.0], [99.8, 10.0], [99.9, 10.0]], "isOverall": false, "label": "Visit the system page-After stress", "isController": false}, {"data": [[0.0, 111.0], [0.1, 111.0], [0.2, 134.0], [0.3, 134.0], [0.4, 138.0], [0.5, 138.0], [0.6, 138.0], [0.7, 139.0], [0.8, 139.0], [0.9, 141.0], [1.0, 142.0], [1.1, 142.0], [1.2, 142.0], [1.3, 142.0], [1.4, 142.0], [1.5, 142.0], [1.6, 142.0], [1.7, 143.0], [1.8, 143.0], [1.9, 143.0], [2.0, 144.0], [2.1, 144.0], [2.2, 144.0], [2.3, 144.0], [2.4, 144.0], [2.5, 145.0], [2.6, 145.0], [2.7, 145.0], [2.8, 145.0], [2.9, 146.0], [3.0, 146.0], [3.1, 146.0], [3.2, 146.0], [3.3, 146.0], [3.4, 146.0], [3.5, 147.0], [3.6, 147.0], [3.7, 147.0], [3.8, 147.0], [3.9, 148.0], [4.0, 149.0], [4.1, 149.0], [4.2, 149.0], [4.3, 149.0], [4.4, 149.0], [4.5, 151.0], [4.6, 151.0], [4.7, 151.0], [4.8, 151.0], [4.9, 151.0], [5.0, 151.0], [5.1, 151.0], [5.2, 152.0], [5.3, 152.0], [5.4, 152.0], [5.5, 152.0], [5.6, 152.0], [5.7, 152.0], [5.8, 152.0], [5.9, 153.0], [6.0, 153.0], [6.1, 154.0], [6.2, 154.0], [6.3, 154.0], [6.4, 156.0], [6.5, 156.0], [6.6, 157.0], [6.7, 157.0], [6.8, 157.0], [6.9, 158.0], [7.0, 158.0], [7.1, 158.0], [7.2, 159.0], [7.3, 159.0], [7.4, 159.0], [7.5, 159.0], [7.6, 159.0], [7.7, 159.0], [7.8, 159.0], [7.9, 160.0], [8.0, 160.0], [8.1, 160.0], [8.2, 160.0], [8.3, 160.0], [8.4, 161.0], [8.5, 162.0], [8.6, 162.0], [8.7, 162.0], [8.8, 162.0], [8.9, 162.0], [9.0, 163.0], [9.1, 163.0], [9.2, 165.0], [9.3, 165.0], [9.4, 165.0], [9.5, 165.0], [9.6, 165.0], [9.7, 165.0], [9.8, 165.0], [9.9, 166.0], [10.0, 166.0], [10.1, 166.0], [10.2, 166.0], [10.3, 166.0], [10.4, 167.0], [10.5, 168.0], [10.6, 168.0], [10.7, 168.0], [10.8, 168.0], [10.9, 168.0], [11.0, 168.0], [11.1, 168.0], [11.2, 169.0], [11.3, 169.0], [11.4, 170.0], [11.5, 170.0], [11.6, 170.0], [11.7, 170.0], [11.8, 170.0], [11.9, 170.0], [12.0, 171.0], [12.1, 171.0], [12.2, 171.0], [12.3, 171.0], [12.4, 172.0], [12.5, 172.0], [12.6, 172.0], [12.7, 172.0], [12.8, 172.0], [12.9, 172.0], [13.0, 172.0], [13.1, 172.0], [13.2, 173.0], [13.3, 173.0], [13.4, 174.0], [13.5, 174.0], [13.6, 174.0], [13.7, 174.0], [13.8, 174.0], [13.9, 175.0], [14.0, 175.0], [14.1, 175.0], [14.2, 175.0], [14.3, 175.0], [14.4, 175.0], [14.5, 177.0], [14.6, 177.0], [14.7, 177.0], [14.8, 177.0], [14.9, 178.0], [15.0, 180.0], [15.1, 180.0], [15.2, 180.0], [15.3, 180.0], [15.4, 180.0], [15.5, 181.0], [15.6, 181.0], [15.7, 182.0], [15.8, 182.0], [15.9, 182.0], [16.0, 182.0], [16.1, 182.0], [16.2, 183.0], [16.3, 183.0], [16.4, 183.0], [16.5, 183.0], [16.6, 183.0], [16.7, 183.0], [16.8, 183.0], [16.9, 183.0], [17.0, 184.0], [17.1, 184.0], [17.2, 184.0], [17.3, 184.0], [17.4, 184.0], [17.5, 184.0], [17.6, 184.0], [17.7, 185.0], [17.8, 185.0], [17.9, 185.0], [18.0, 185.0], [18.1, 185.0], [18.2, 185.0], [18.3, 185.0], [18.4, 187.0], [18.5, 187.0], [18.6, 187.0], [18.7, 187.0], [18.8, 187.0], [18.9, 187.0], [19.0, 187.0], [19.1, 187.0], [19.2, 187.0], [19.3, 187.0], [19.4, 188.0], [19.5, 188.0], [19.6, 188.0], [19.7, 188.0], [19.8, 188.0], [19.9, 189.0], [20.0, 189.0], [20.1, 189.0], [20.2, 190.0], [20.3, 190.0], [20.4, 190.0], [20.5, 190.0], [20.6, 190.0], [20.7, 190.0], [20.8, 190.0], [20.9, 191.0], [21.0, 191.0], [21.1, 191.0], [21.2, 191.0], [21.3, 191.0], [21.4, 191.0], [21.5, 191.0], [21.6, 191.0], [21.7, 192.0], [21.8, 192.0], [21.9, 193.0], [22.0, 193.0], [22.1, 193.0], [22.2, 193.0], [22.3, 193.0], [22.4, 193.0], [22.5, 193.0], [22.6, 193.0], [22.7, 194.0], [22.8, 194.0], [22.9, 196.0], [23.0, 196.0], [23.1, 196.0], [23.2, 196.0], [23.3, 196.0], [23.4, 197.0], [23.5, 197.0], [23.6, 197.0], [23.7, 198.0], [23.8, 198.0], [23.9, 198.0], [24.0, 198.0], [24.1, 198.0], [24.2, 199.0], [24.3, 199.0], [24.4, 199.0], [24.5, 200.0], [24.6, 200.0], [24.7, 201.0], [24.8, 201.0], [24.9, 201.0], [25.0, 201.0], [25.1, 201.0], [25.2, 201.0], [25.3, 201.0], [25.4, 202.0], [25.5, 202.0], [25.6, 202.0], [25.7, 203.0], [25.8, 203.0], [25.9, 203.0], [26.0, 203.0], [26.1, 203.0], [26.2, 203.0], [26.3, 203.0], [26.4, 203.0], [26.5, 204.0], [26.6, 204.0], [26.7, 204.0], [26.8, 204.0], [26.9, 204.0], [27.0, 205.0], [27.1, 205.0], [27.2, 205.0], [27.3, 205.0], [27.4, 205.0], [27.5, 205.0], [27.6, 205.0], [27.7, 205.0], [27.8, 205.0], [27.9, 206.0], [28.0, 207.0], [28.1, 207.0], [28.2, 207.0], [28.3, 207.0], [28.4, 208.0], [28.5, 208.0], [28.6, 208.0], [28.7, 208.0], [28.8, 208.0], [28.9, 208.0], [29.0, 209.0], [29.1, 209.0], [29.2, 209.0], [29.3, 209.0], [29.4, 209.0], [29.5, 209.0], [29.6, 209.0], [29.7, 210.0], [29.8, 210.0], [29.9, 210.0], [30.0, 210.0], [30.1, 210.0], [30.2, 210.0], [30.3, 210.0], [30.4, 211.0], [30.5, 211.0], [30.6, 211.0], [30.7, 212.0], [30.8, 212.0], [30.9, 212.0], [31.0, 212.0], [31.1, 212.0], [31.2, 212.0], [31.3, 212.0], [31.4, 212.0], [31.5, 213.0], [31.6, 213.0], [31.7, 213.0], [31.8, 213.0], [31.9, 213.0], [32.0, 214.0], [32.1, 214.0], [32.2, 214.0], [32.3, 214.0], [32.4, 215.0], [32.5, 217.0], [32.6, 217.0], [32.7, 218.0], [32.8, 218.0], [32.9, 218.0], [33.0, 218.0], [33.1, 218.0], [33.2, 219.0], [33.3, 219.0], [33.4, 220.0], [33.5, 221.0], [33.6, 221.0], [33.7, 221.0], [33.8, 221.0], [33.9, 221.0], [34.0, 222.0], [34.1, 222.0], [34.2, 223.0], [34.3, 223.0], [34.4, 230.0], [34.5, 231.0], [34.6, 231.0], [34.7, 232.0], [34.8, 232.0], [34.9, 233.0], [35.0, 234.0], [35.1, 234.0], [35.2, 235.0], [35.3, 235.0], [35.4, 237.0], [35.5, 238.0], [35.6, 238.0], [35.7, 239.0], [35.8, 239.0], [35.9, 250.0], [36.0, 251.0], [36.1, 251.0], [36.2, 253.0], [36.3, 253.0], [36.4, 253.0], [36.5, 253.0], [36.6, 253.0], [36.7, 253.0], [36.8, 253.0], [36.9, 253.0], [37.0, 254.0], [37.1, 254.0], [37.2, 255.0], [37.3, 255.0], [37.4, 256.0], [37.5, 256.0], [37.6, 256.0], [37.7, 257.0], [37.8, 257.0], [37.9, 257.0], [38.0, 270.0], [38.1, 270.0], [38.2, 286.0], [38.3, 286.0], [38.4, 293.0], [38.5, 308.0], [38.6, 308.0], [38.7, 310.0], [38.8, 310.0], [38.9, 312.0], [39.0, 313.0], [39.1, 313.0], [39.2, 315.0], [39.3, 315.0], [39.4, 315.0], [39.5, 317.0], [39.6, 317.0], [39.7, 318.0], [39.8, 318.0], [39.9, 320.0], [40.0, 322.0], [40.1, 322.0], [40.2, 322.0], [40.3, 322.0], [40.4, 324.0], [40.5, 324.0], [40.6, 324.0], [40.7, 325.0], [40.8, 325.0], [40.9, 325.0], [41.0, 325.0], [41.1, 325.0], [41.2, 326.0], [41.3, 326.0], [41.4, 327.0], [41.5, 327.0], [41.6, 327.0], [41.7, 329.0], [41.8, 329.0], [41.9, 329.0], [42.0, 330.0], [42.1, 330.0], [42.2, 330.0], [42.3, 330.0], [42.4, 332.0], [42.5, 332.0], [42.6, 332.0], [42.7, 333.0], [42.8, 333.0], [42.9, 333.0], [43.0, 333.0], [43.1, 333.0], [43.2, 336.0], [43.3, 336.0], [43.4, 337.0], [43.5, 337.0], [43.6, 337.0], [43.7, 337.0], [43.8, 337.0], [43.9, 338.0], [44.0, 338.0], [44.1, 338.0], [44.2, 338.0], [44.3, 338.0], [44.4, 339.0], [44.5, 339.0], [44.6, 339.0], [44.7, 339.0], [44.8, 339.0], [44.9, 341.0], [45.0, 341.0], [45.1, 341.0], [45.2, 342.0], [45.3, 342.0], [45.4, 342.0], [45.5, 342.0], [45.6, 342.0], [45.7, 343.0], [45.8, 343.0], [45.9, 343.0], [46.0, 345.0], [46.1, 345.0], [46.2, 345.0], [46.3, 345.0], [46.4, 346.0], [46.5, 346.0], [46.6, 346.0], [46.7, 346.0], [46.8, 346.0], [46.9, 347.0], [47.0, 347.0], [47.1, 347.0], [47.2, 347.0], [47.3, 347.0], [47.4, 347.0], [47.5, 348.0], [47.6, 348.0], [47.7, 351.0], [47.8, 351.0], [47.9, 351.0], [48.0, 352.0], [48.1, 352.0], [48.2, 353.0], [48.3, 353.0], [48.4, 354.0], [48.5, 354.0], [48.6, 354.0], [48.7, 355.0], [48.8, 355.0], [48.9, 357.0], [49.0, 357.0], [49.1, 357.0], [49.2, 358.0], [49.3, 358.0], [49.4, 359.0], [49.5, 360.0], [49.6, 360.0], [49.7, 361.0], [49.8, 361.0], [49.9, 361.0], [50.0, 361.0], [50.1, 361.0], [50.2, 362.0], [50.3, 362.0], [50.4, 362.0], [50.5, 363.0], [50.6, 363.0], [50.7, 363.0], [50.8, 363.0], [50.9, 364.0], [51.0, 364.0], [51.1, 364.0], [51.2, 365.0], [51.3, 365.0], [51.4, 366.0], [51.5, 367.0], [51.6, 367.0], [51.7, 367.0], [51.8, 367.0], [51.9, 367.0], [52.0, 368.0], [52.1, 368.0], [52.2, 368.0], [52.3, 368.0], [52.4, 368.0], [52.5, 369.0], [52.6, 369.0], [52.7, 369.0], [52.8, 369.0], [52.9, 369.0], [53.0, 369.0], [53.1, 369.0], [53.2, 369.0], [53.3, 369.0], [53.4, 370.0], [53.5, 370.0], [53.6, 370.0], [53.7, 370.0], [53.8, 370.0], [53.9, 370.0], [54.0, 370.0], [54.1, 370.0], [54.2, 371.0], [54.3, 371.0], [54.4, 371.0], [54.5, 371.0], [54.6, 371.0], [54.7, 371.0], [54.8, 371.0], [54.9, 372.0], [55.0, 372.0], [55.1, 372.0], [55.2, 372.0], [55.3, 372.0], [55.4, 372.0], [55.5, 372.0], [55.6, 372.0], [55.7, 373.0], [55.8, 373.0], [55.9, 373.0], [56.0, 373.0], [56.1, 373.0], [56.2, 373.0], [56.3, 373.0], [56.4, 374.0], [56.5, 374.0], [56.6, 374.0], [56.7, 374.0], [56.8, 374.0], [56.9, 374.0], [57.0, 374.0], [57.1, 374.0], [57.2, 375.0], [57.3, 375.0], [57.4, 376.0], [57.5, 376.0], [57.6, 376.0], [57.7, 376.0], [57.8, 376.0], [57.9, 376.0], [58.0, 376.0], [58.1, 376.0], [58.2, 376.0], [58.3, 376.0], [58.4, 377.0], [58.5, 378.0], [58.6, 378.0], [58.7, 379.0], [58.8, 379.0], [58.9, 380.0], [59.0, 381.0], [59.1, 381.0], [59.2, 382.0], [59.3, 382.0], [59.4, 383.0], [59.5, 383.0], [59.6, 383.0], [59.7, 384.0], [59.8, 384.0], [59.9, 385.0], [60.0, 386.0], [60.1, 386.0], [60.2, 387.0], [60.3, 387.0], [60.4, 388.0], [60.5, 388.0], [60.6, 388.0], [60.7, 389.0], [60.8, 389.0], [60.9, 389.0], [61.0, 390.0], [61.1, 390.0], [61.2, 390.0], [61.3, 390.0], [61.4, 390.0], [61.5, 391.0], [61.6, 391.0], [61.7, 391.0], [61.8, 391.0], [61.9, 392.0], [62.0, 392.0], [62.1, 392.0], [62.2, 392.0], [62.3, 392.0], [62.4, 392.0], [62.5, 393.0], [62.6, 393.0], [62.7, 394.0], [62.8, 394.0], [62.9, 394.0], [63.0, 395.0], [63.1, 395.0], [63.2, 398.0], [63.3, 398.0], [63.4, 400.0], [63.5, 401.0], [63.6, 401.0], [63.7, 403.0], [63.8, 403.0], [63.9, 405.0], [64.0, 411.0], [64.1, 411.0], [64.2, 411.0], [64.3, 411.0], [64.4, 413.0], [64.5, 414.0], [64.6, 414.0], [64.7, 415.0], [64.8, 415.0], [64.9, 416.0], [65.0, 417.0], [65.1, 417.0], [65.2, 417.0], [65.3, 417.0], [65.4, 418.0], [65.5, 419.0], [65.6, 419.0], [65.7, 419.0], [65.8, 419.0], [65.9, 426.0], [66.0, 426.0], [66.1, 426.0], [66.2, 439.0], [66.3, 439.0], [66.4, 444.0], [66.5, 449.0], [66.6, 449.0], [66.7, 453.0], [66.8, 453.0], [66.9, 457.0], [67.0, 457.0], [67.1, 457.0], [67.2, 458.0], [67.3, 458.0], [67.4, 459.0], [67.5, 460.0], [67.6, 460.0], [67.7, 462.0], [67.8, 462.0], [67.9, 463.0], [68.0, 465.0], [68.1, 465.0], [68.2, 468.0], [68.3, 468.0], [68.4, 468.0], [68.5, 469.0], [68.6, 469.0], [68.7, 471.0], [68.8, 471.0], [68.9, 472.0], [69.0, 473.0], [69.1, 473.0], [69.2, 474.0], [69.3, 474.0], [69.4, 477.0], [69.5, 478.0], [69.6, 478.0], [69.7, 478.0], [69.8, 478.0], [69.9, 479.0], [70.0, 485.0], [70.1, 485.0], [70.2, 491.0], [70.3, 491.0], [70.4, 491.0], [70.5, 495.0], [70.6, 495.0], [70.7, 495.0], [70.8, 495.0], [70.9, 496.0], [71.0, 502.0], [71.1, 502.0], [71.2, 503.0], [71.3, 503.0], [71.4, 503.0], [71.5, 506.0], [71.6, 506.0], [71.7, 507.0], [71.8, 507.0], [71.9, 507.0], [72.0, 509.0], [72.1, 509.0], [72.2, 510.0], [72.3, 510.0], [72.4, 513.0], [72.5, 515.0], [72.6, 515.0], [72.7, 515.0], [72.8, 515.0], [72.9, 518.0], [73.0, 521.0], [73.1, 521.0], [73.2, 522.0], [73.3, 522.0], [73.4, 527.0], [73.5, 527.0], [73.6, 531.0], [73.7, 538.0], [73.8, 538.0], [73.9, 540.0], [74.0, 540.0], [74.1, 543.0], [74.2, 545.0], [74.3, 545.0], [74.4, 546.0], [74.5, 546.0], [74.6, 548.0], [74.7, 554.0], [74.8, 554.0], [74.9, 560.0], [75.0, 560.0], [75.1, 568.0], [75.2, 572.0], [75.3, 572.0], [75.4, 574.0], [75.5, 574.0], [75.6, 581.0], [75.7, 584.0], [75.8, 584.0], [75.9, 588.0], [76.0, 588.0], [76.1, 626.0], [76.2, 628.0], [76.3, 628.0], [76.4, 724.0], [76.5, 724.0], [76.6, 741.0], [76.7, 746.0], [76.8, 746.0], [76.9, 752.0], [77.0, 752.0], [77.1, 761.0], [77.2, 765.0], [77.3, 765.0], [77.4, 768.0], [77.5, 768.0], [77.6, 768.0], [77.7, 774.0], [77.8, 774.0], [77.9, 784.0], [78.0, 784.0], [78.1, 787.0], [78.2, 788.0], [78.3, 788.0], [78.4, 809.0], [78.5, 809.0], [78.6, 816.0], [78.7, 824.0], [78.8, 824.0], [78.9, 825.0], [79.0, 825.0], [79.1, 833.0], [79.2, 837.0], [79.3, 837.0], [79.4, 837.0], [79.5, 837.0], [79.6, 842.0], [79.7, 844.0], [79.8, 844.0], [79.9, 844.0], [80.0, 844.0], [80.1, 847.0], [80.2, 853.0], [80.3, 853.0], [80.4, 853.0], [80.5, 853.0], [80.6, 854.0], [80.7, 855.0], [80.8, 855.0], [80.9, 858.0], [81.0, 858.0], [81.1, 861.0], [81.2, 863.0], [81.3, 863.0], [81.4, 864.0], [81.5, 864.0], [81.6, 865.0], [81.7, 874.0], [81.8, 874.0], [81.9, 882.0], [82.0, 882.0], [82.1, 898.0], [82.2, 901.0], [82.3, 901.0], [82.4, 901.0], [82.5, 901.0], [82.6, 907.0], [82.7, 908.0], [82.8, 908.0], [82.9, 908.0], [83.0, 908.0], [83.1, 911.0], [83.2, 914.0], [83.3, 914.0], [83.4, 915.0], [83.5, 915.0], [83.6, 917.0], [83.7, 922.0], [83.8, 922.0], [83.9, 928.0], [84.0, 928.0], [84.1, 930.0], [84.2, 933.0], [84.3, 933.0], [84.4, 934.0], [84.5, 934.0], [84.6, 937.0], [84.7, 938.0], [84.8, 938.0], [84.9, 939.0], [85.0, 939.0], [85.1, 952.0], [85.2, 952.0], [85.3, 952.0], [85.4, 954.0], [85.5, 954.0], [85.6, 956.0], [85.7, 957.0], [85.8, 957.0], [85.9, 958.0], [86.0, 958.0], [86.1, 959.0], [86.2, 959.0], [86.3, 959.0], [86.4, 961.0], [86.5, 961.0], [86.6, 962.0], [86.7, 973.0], [86.8, 973.0], [86.9, 977.0], [87.0, 977.0], [87.1, 979.0], [87.2, 979.0], [87.3, 979.0], [87.4, 981.0], [87.5, 981.0], [87.6, 982.0], [87.7, 983.0], [87.8, 983.0], [87.9, 985.0], [88.0, 985.0], [88.1, 987.0], [88.2, 1009.0], [88.3, 1009.0], [88.4, 1020.0], [88.5, 1020.0], [88.6, 1029.0], [88.7, 1059.0], [88.8, 1059.0], [88.9, 1064.0], [89.0, 1064.0], [89.1, 1067.0], [89.2, 1080.0], [89.3, 1080.0], [89.4, 1100.0], [89.5, 1100.0], [89.6, 1110.0], [89.7, 1113.0], [89.8, 1113.0], [89.9, 1117.0], [90.0, 1117.0], [90.1, 1131.0], [90.2, 1134.0], [90.3, 1134.0], [90.4, 1135.0], [90.5, 1135.0], [90.6, 1137.0], [90.7, 1148.0], [90.8, 1148.0], [90.9, 1150.0], [91.0, 1150.0], [91.1, 1152.0], [91.2, 1199.0], [91.3, 1199.0], [91.4, 1222.0], [91.5, 1222.0], [91.6, 1233.0], [91.7, 1237.0], [91.8, 1237.0], [91.9, 1246.0], [92.0, 1246.0], [92.1, 1281.0], [92.2, 1284.0], [92.3, 1284.0], [92.4, 1289.0], [92.5, 1289.0], [92.6, 1298.0], [92.7, 1299.0], [92.8, 1299.0], [92.9, 1306.0], [93.0, 1306.0], [93.1, 1325.0], [93.2, 1325.0], [93.3, 1325.0], [93.4, 1328.0], [93.5, 1328.0], [93.6, 1329.0], [93.7, 1332.0], [93.8, 1332.0], [93.9, 1338.0], [94.0, 1338.0], [94.1, 1345.0], [94.2, 1346.0], [94.3, 1346.0], [94.4, 1351.0], [94.5, 1351.0], [94.6, 1352.0], [94.7, 1354.0], [94.8, 1354.0], [94.9, 1356.0], [95.0, 1356.0], [95.1, 1357.0], [95.2, 1360.0], [95.3, 1360.0], [95.4, 1364.0], [95.5, 1364.0], [95.6, 1366.0], [95.7, 1371.0], [95.8, 1371.0], [95.9, 1371.0], [96.0, 1371.0], [96.1, 1374.0], [96.2, 1375.0], [96.3, 1375.0], [96.4, 1376.0], [96.5, 1376.0], [96.6, 1377.0], [96.7, 1379.0], [96.8, 1379.0], [96.9, 1380.0], [97.0, 1380.0], [97.1, 1381.0], [97.2, 1381.0], [97.3, 1381.0], [97.4, 1383.0], [97.5, 1383.0], [97.6, 1388.0], [97.7, 1390.0], [97.8, 1390.0], [97.9, 1391.0], [98.0, 1391.0], [98.1, 1392.0], [98.2, 1392.0], [98.3, 1392.0], [98.4, 1392.0], [98.5, 1392.0], [98.6, 1395.0], [98.7, 1396.0], [98.8, 1396.0], [98.9, 1399.0], [99.0, 1399.0], [99.1, 1402.0], [99.2, 1403.0], [99.3, 1403.0], [99.4, 1411.0], [99.5, 1411.0], [99.6, 1415.0], [99.7, 1425.0], [99.8, 1425.0], [99.9, 1425.0], [100.0, 1425.0]], "isOverall": false, "label": "Excecute logout", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 3.0], [27.8, 3.0], [27.9, 3.0], [28.0, 3.0], [28.1, 3.0], [28.2, 3.0], [28.3, 3.0], [28.4, 3.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 5.0], [30.3, 5.0], [30.4, 5.0], [30.5, 5.0], [30.6, 5.0], [30.7, 5.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 6.0], [31.3, 6.0], [31.4, 6.0], [31.5, 7.0], [31.6, 7.0], [31.7, 7.0], [31.8, 7.0], [31.9, 7.0], [32.0, 7.0], [32.1, 7.0], [32.2, 7.0], [32.3, 7.0], [32.4, 7.0], [32.5, 7.0], [32.6, 7.0], [32.7, 8.0], [32.8, 8.0], [32.9, 8.0], [33.0, 9.0], [33.1, 9.0], [33.2, 10.0], [33.3, 10.0], [33.4, 10.0], [33.5, 11.0], [33.6, 11.0], [33.7, 12.0], [33.8, 12.0], [33.9, 12.0], [34.0, 17.0], [34.1, 17.0], [34.2, 17.0], [34.3, 17.0], [34.4, 17.0], [34.5, 20.0], [34.6, 20.0], [34.7, 21.0], [34.8, 21.0], [34.9, 21.0], [35.0, 21.0], [35.1, 21.0], [35.2, 21.0], [35.3, 21.0], [35.4, 23.0], [35.5, 26.0], [35.6, 26.0], [35.7, 27.0], [35.8, 27.0], [35.9, 32.0], [36.0, 32.0], [36.1, 32.0], [36.2, 32.0], [36.3, 32.0], [36.4, 33.0], [36.5, 35.0], [36.6, 35.0], [36.7, 36.0], [36.8, 36.0], [36.9, 36.0], [37.0, 39.0], [37.1, 39.0], [37.2, 48.0], [37.3, 48.0], [37.4, 51.0], [37.5, 54.0], [37.6, 54.0], [37.7, 56.0], [37.8, 56.0], [37.9, 57.0], [38.0, 59.0], [38.1, 59.0], [38.2, 61.0], [38.3, 61.0], [38.4, 70.0], [38.5, 76.0], [38.6, 76.0], [38.7, 78.0], [38.8, 78.0], [38.9, 80.0], [39.0, 82.0], [39.1, 82.0], [39.2, 82.0], [39.3, 82.0], [39.4, 85.0], [39.5, 85.0], [39.6, 85.0], [39.7, 88.0], [39.8, 88.0], [39.9, 91.0], [40.0, 96.0], [40.1, 96.0], [40.2, 97.0], [40.3, 97.0], [40.4, 97.0], [40.5, 98.0], [40.6, 98.0], [40.7, 99.0], [40.8, 99.0], [40.9, 100.0], [41.0, 101.0], [41.1, 101.0], [41.2, 102.0], [41.3, 102.0], [41.4, 103.0], [41.5, 104.0], [41.6, 104.0], [41.7, 106.0], [41.8, 106.0], [41.9, 106.0], [42.0, 107.0], [42.1, 107.0], [42.2, 116.0], [42.3, 116.0], [42.4, 117.0], [42.5, 123.0], [42.6, 123.0], [42.7, 123.0], [42.8, 123.0], [42.9, 123.0], [43.0, 124.0], [43.1, 124.0], [43.2, 126.0], [43.3, 126.0], [43.4, 126.0], [43.5, 128.0], [43.6, 128.0], [43.7, 131.0], [43.8, 131.0], [43.9, 133.0], [44.0, 135.0], [44.1, 135.0], [44.2, 135.0], [44.3, 135.0], [44.4, 139.0], [44.5, 140.0], [44.6, 140.0], [44.7, 142.0], [44.8, 142.0], [44.9, 142.0], [45.0, 142.0], [45.1, 142.0], [45.2, 142.0], [45.3, 142.0], [45.4, 144.0], [45.5, 144.0], [45.6, 144.0], [45.7, 145.0], [45.8, 145.0], [45.9, 145.0], [46.0, 148.0], [46.1, 148.0], [46.2, 148.0], [46.3, 148.0], [46.4, 148.0], [46.5, 149.0], [46.6, 149.0], [46.7, 150.0], [46.8, 150.0], [46.9, 152.0], [47.0, 153.0], [47.1, 153.0], [47.2, 153.0], [47.3, 153.0], [47.4, 154.0], [47.5, 154.0], [47.6, 154.0], [47.7, 155.0], [47.8, 155.0], [47.9, 156.0], [48.0, 156.0], [48.1, 156.0], [48.2, 158.0], [48.3, 158.0], [48.4, 160.0], [48.5, 162.0], [48.6, 162.0], [48.7, 162.0], [48.8, 162.0], [48.9, 162.0], [49.0, 163.0], [49.1, 163.0], [49.2, 163.0], [49.3, 163.0], [49.4, 164.0], [49.5, 165.0], [49.6, 165.0], [49.7, 165.0], [49.8, 165.0], [49.9, 165.0], [50.0, 165.0], [50.1, 165.0], [50.2, 168.0], [50.3, 168.0], [50.4, 168.0], [50.5, 171.0], [50.6, 171.0], [50.7, 171.0], [50.8, 171.0], [50.9, 172.0], [51.0, 173.0], [51.1, 173.0], [51.2, 173.0], [51.3, 173.0], [51.4, 175.0], [51.5, 175.0], [51.6, 175.0], [51.7, 175.0], [51.8, 175.0], [51.9, 177.0], [52.0, 178.0], [52.1, 178.0], [52.2, 178.0], [52.3, 178.0], [52.4, 178.0], [52.5, 180.0], [52.6, 180.0], [52.7, 180.0], [52.8, 180.0], [52.9, 180.0], [53.0, 180.0], [53.1, 180.0], [53.2, 180.0], [53.3, 180.0], [53.4, 181.0], [53.5, 181.0], [53.6, 181.0], [53.7, 182.0], [53.8, 182.0], [53.9, 182.0], [54.0, 183.0], [54.1, 183.0], [54.2, 183.0], [54.3, 183.0], [54.4, 184.0], [54.5, 184.0], [54.6, 184.0], [54.7, 184.0], [54.8, 184.0], [54.9, 184.0], [55.0, 185.0], [55.1, 185.0], [55.2, 185.0], [55.3, 185.0], [55.4, 186.0], [55.5, 187.0], [55.6, 187.0], [55.7, 187.0], [55.8, 187.0], [55.9, 188.0], [56.0, 188.0], [56.1, 188.0], [56.2, 190.0], [56.3, 190.0], [56.4, 190.0], [56.5, 190.0], [56.6, 190.0], [56.7, 191.0], [56.8, 191.0], [56.9, 191.0], [57.0, 192.0], [57.1, 192.0], [57.2, 192.0], [57.3, 192.0], [57.4, 193.0], [57.5, 193.0], [57.6, 193.0], [57.7, 193.0], [57.8, 193.0], [57.9, 193.0], [58.0, 194.0], [58.1, 194.0], [58.2, 198.0], [58.3, 198.0], [58.4, 198.0], [58.5, 199.0], [58.6, 199.0], [58.7, 199.0], [58.8, 199.0], [58.9, 203.0], [59.0, 204.0], [59.1, 204.0], [59.2, 204.0], [59.3, 204.0], [59.4, 204.0], [59.5, 206.0], [59.6, 206.0], [59.7, 206.0], [59.8, 206.0], [59.9, 207.0], [60.0, 207.0], [60.1, 207.0], [60.2, 208.0], [60.3, 208.0], [60.4, 208.0], [60.5, 210.0], [60.6, 210.0], [60.7, 211.0], [60.8, 211.0], [60.9, 212.0], [61.0, 214.0], [61.1, 214.0], [61.2, 216.0], [61.3, 216.0], [61.4, 218.0], [61.5, 222.0], [61.6, 222.0], [61.7, 225.0], [61.8, 225.0], [61.9, 226.0], [62.0, 234.0], [62.1, 234.0], [62.2, 236.0], [62.3, 236.0], [62.4, 236.0], [62.5, 241.0], [62.6, 241.0], [62.7, 243.0], [62.8, 243.0], [62.9, 247.0], [63.0, 247.0], [63.1, 247.0], [63.2, 247.0], [63.3, 247.0], [63.4, 253.0], [63.5, 253.0], [63.6, 253.0], [63.7, 256.0], [63.8, 256.0], [63.9, 256.0], [64.0, 257.0], [64.1, 257.0], [64.2, 257.0], [64.3, 257.0], [64.4, 258.0], [64.5, 260.0], [64.6, 260.0], [64.7, 262.0], [64.8, 262.0], [64.9, 263.0], [65.0, 266.0], [65.1, 266.0], [65.2, 266.0], [65.3, 266.0], [65.4, 267.0], [65.5, 267.0], [65.6, 267.0], [65.7, 269.0], [65.8, 269.0], [65.9, 270.0], [66.0, 270.0], [66.1, 270.0], [66.2, 270.0], [66.3, 270.0], [66.4, 272.0], [66.5, 272.0], [66.6, 272.0], [66.7, 274.0], [66.8, 274.0], [66.9, 274.0], [67.0, 274.0], [67.1, 274.0], [67.2, 276.0], [67.3, 276.0], [67.4, 277.0], [67.5, 277.0], [67.6, 277.0], [67.7, 277.0], [67.8, 277.0], [67.9, 282.0], [68.0, 284.0], [68.1, 284.0], [68.2, 290.0], [68.3, 290.0], [68.4, 290.0], [68.5, 292.0], [68.6, 292.0], [68.7, 294.0], [68.8, 294.0], [68.9, 295.0], [69.0, 296.0], [69.1, 296.0], [69.2, 297.0], [69.3, 297.0], [69.4, 298.0], [69.5, 302.0], [69.6, 302.0], [69.7, 304.0], [69.8, 304.0], [69.9, 304.0], [70.0, 312.0], [70.1, 312.0], [70.2, 318.0], [70.3, 318.0], [70.4, 324.0], [70.5, 325.0], [70.6, 325.0], [70.7, 326.0], [70.8, 326.0], [70.9, 329.0], [71.0, 330.0], [71.1, 330.0], [71.2, 330.0], [71.3, 330.0], [71.4, 331.0], [71.5, 332.0], [71.6, 332.0], [71.7, 332.0], [71.8, 332.0], [71.9, 334.0], [72.0, 336.0], [72.1, 336.0], [72.2, 336.0], [72.3, 336.0], [72.4, 342.0], [72.5, 342.0], [72.6, 342.0], [72.7, 342.0], [72.8, 342.0], [72.9, 343.0], [73.0, 345.0], [73.1, 345.0], [73.2, 345.0], [73.3, 345.0], [73.4, 345.0], [73.5, 345.0], [73.6, 345.0], [73.7, 345.0], [73.8, 345.0], [73.9, 346.0], [74.0, 348.0], [74.1, 348.0], [74.2, 349.0], [74.3, 349.0], [74.4, 350.0], [74.5, 350.0], [74.6, 351.0], [74.7, 351.0], [74.8, 351.0], [74.9, 351.0], [75.0, 351.0], [75.1, 352.0], [75.2, 352.0], [75.3, 352.0], [75.4, 352.0], [75.5, 352.0], [75.6, 352.0], [75.7, 354.0], [75.8, 354.0], [75.9, 355.0], [76.0, 355.0], [76.1, 356.0], [76.2, 357.0], [76.3, 357.0], [76.4, 358.0], [76.5, 358.0], [76.6, 358.0], [76.7, 359.0], [76.8, 359.0], [76.9, 359.0], [77.0, 359.0], [77.1, 360.0], [77.2, 360.0], [77.3, 360.0], [77.4, 362.0], [77.5, 362.0], [77.6, 363.0], [77.7, 363.0], [77.8, 363.0], [77.9, 363.0], [78.0, 363.0], [78.1, 364.0], [78.2, 364.0], [78.3, 364.0], [78.4, 364.0], [78.5, 364.0], [78.6, 368.0], [78.7, 372.0], [78.8, 372.0], [78.9, 393.0], [79.0, 393.0], [79.1, 397.0], [79.2, 400.0], [79.3, 400.0], [79.4, 401.0], [79.5, 401.0], [79.6, 404.0], [79.7, 414.0], [79.8, 414.0], [79.9, 423.0], [80.0, 423.0], [80.1, 446.0], [80.2, 451.0], [80.3, 451.0], [80.4, 455.0], [80.5, 455.0], [80.6, 540.0], [80.7, 544.0], [80.8, 544.0], [80.9, 548.0], [81.0, 548.0], [81.1, 568.0], [81.2, 572.0], [81.3, 572.0], [81.4, 574.0], [81.5, 574.0], [81.6, 648.0], [81.7, 674.0], [81.8, 674.0], [81.9, 695.0], [82.0, 695.0], [82.1, 731.0], [82.2, 737.0], [82.3, 737.0], [82.4, 739.0], [82.5, 739.0], [82.6, 758.0], [82.7, 759.0], [82.8, 759.0], [82.9, 762.0], [83.0, 762.0], [83.1, 771.0], [83.2, 772.0], [83.3, 772.0], [83.4, 777.0], [83.5, 777.0], [83.6, 778.0], [83.7, 779.0], [83.8, 779.0], [83.9, 780.0], [84.0, 780.0], [84.1, 783.0], [84.2, 786.0], [84.3, 786.0], [84.4, 789.0], [84.5, 789.0], [84.6, 791.0], [84.7, 798.0], [84.8, 798.0], [84.9, 799.0], [85.0, 799.0], [85.1, 809.0], [85.2, 813.0], [85.3, 813.0], [85.4, 816.0], [85.5, 816.0], [85.6, 824.0], [85.7, 831.0], [85.8, 831.0], [85.9, 833.0], [86.0, 833.0], [86.1, 834.0], [86.2, 838.0], [86.3, 838.0], [86.4, 840.0], [86.5, 840.0], [86.6, 853.0], [86.7, 862.0], [86.8, 862.0], [86.9, 864.0], [87.0, 864.0], [87.1, 864.0], [87.2, 870.0], [87.3, 870.0], [87.4, 870.0], [87.5, 870.0], [87.6, 873.0], [87.7, 876.0], [87.8, 876.0], [87.9, 889.0], [88.0, 889.0], [88.1, 889.0], [88.2, 902.0], [88.3, 902.0], [88.4, 902.0], [88.5, 902.0], [88.6, 903.0], [88.7, 906.0], [88.8, 906.0], [88.9, 908.0], [89.0, 908.0], [89.1, 908.0], [89.2, 909.0], [89.3, 909.0], [89.4, 911.0], [89.5, 911.0], [89.6, 912.0], [89.7, 912.0], [89.8, 912.0], [89.9, 912.0], [90.0, 912.0], [90.1, 913.0], [90.2, 917.0], [90.3, 917.0], [90.4, 917.0], [90.5, 917.0], [90.6, 918.0], [90.7, 919.0], [90.8, 919.0], [90.9, 921.0], [91.0, 921.0], [91.1, 921.0], [91.2, 922.0], [91.3, 922.0], [91.4, 925.0], [91.5, 925.0], [91.6, 929.0], [91.7, 932.0], [91.8, 932.0], [91.9, 932.0], [92.0, 932.0], [92.1, 936.0], [92.2, 939.0], [92.3, 939.0], [92.4, 939.0], [92.5, 939.0], [92.6, 940.0], [92.7, 941.0], [92.8, 941.0], [92.9, 941.0], [93.0, 941.0], [93.1, 944.0], [93.2, 946.0], [93.3, 946.0], [93.4, 949.0], [93.5, 949.0], [93.6, 952.0], [93.7, 952.0], [93.8, 952.0], [93.9, 954.0], [94.0, 954.0], [94.1, 954.0], [94.2, 954.0], [94.3, 954.0], [94.4, 954.0], [94.5, 954.0], [94.6, 957.0], [94.7, 957.0], [94.8, 957.0], [94.9, 957.0], [95.0, 957.0], [95.1, 958.0], [95.2, 958.0], [95.3, 958.0], [95.4, 959.0], [95.5, 959.0], [95.6, 959.0], [95.7, 961.0], [95.8, 961.0], [95.9, 962.0], [96.0, 962.0], [96.1, 963.0], [96.2, 965.0], [96.3, 965.0], [96.4, 968.0], [96.5, 968.0], [96.6, 969.0], [96.7, 970.0], [96.8, 970.0], [96.9, 972.0], [97.0, 972.0], [97.1, 974.0], [97.2, 976.0], [97.3, 976.0], [97.4, 976.0], [97.5, 976.0], [97.6, 977.0], [97.7, 978.0], [97.8, 978.0], [97.9, 981.0], [98.0, 981.0], [98.1, 986.0], [98.2, 986.0], [98.3, 986.0], [98.4, 990.0], [98.5, 990.0], [98.6, 991.0], [98.7, 991.0], [98.8, 991.0], [98.9, 993.0], [99.0, 993.0], [99.1, 999.0], [99.2, 1024.0], [99.3, 1024.0], [99.4, 1091.0], [99.5, 1091.0], [99.6, 1109.0], [99.7, 1155.0], [99.8, 1155.0], [99.9, 1194.0], [100.0, 1194.0]], "isOverall": false, "label": "Excecute Leave", "isController": false}, {"data": [[0.0, 13.0], [0.1, 13.0], [0.2, 13.0], [0.3, 13.0], [0.4, 13.0], [0.5, 13.0], [0.6, 13.0], [0.7, 13.0], [0.8, 13.0], [0.9, 13.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 13.0], [2.1, 13.0], [2.2, 13.0], [2.3, 13.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 13.0], [2.8, 13.0], [2.9, 13.0], [3.0, 13.0], [3.1, 13.0], [3.2, 13.0], [3.3, 13.0], [3.4, 13.0], [3.5, 13.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 13.0], [4.1, 13.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 13.0], [4.6, 13.0], [4.7, 13.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 13.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 13.0], [7.0, 13.0], [7.1, 13.0], [7.2, 13.0], [7.3, 13.0], [7.4, 13.0], [7.5, 13.0], [7.6, 13.0], [7.7, 13.0], [7.8, 13.0], [7.9, 13.0], [8.0, 13.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 15.0], [10.1, 15.0], [10.2, 15.0], [10.3, 15.0], [10.4, 15.0], [10.5, 15.0], [10.6, 15.0], [10.7, 15.0], [10.8, 15.0], [10.9, 15.0], [11.0, 15.0], [11.1, 15.0], [11.2, 15.0], [11.3, 15.0], [11.4, 15.0], [11.5, 15.0], [11.6, 15.0], [11.7, 15.0], [11.8, 15.0], [11.9, 15.0], [12.0, 15.0], [12.1, 15.0], [12.2, 15.0], [12.3, 15.0], [12.4, 15.0], [12.5, 15.0], [12.6, 15.0], [12.7, 15.0], [12.8, 15.0], [12.9, 15.0], [13.0, 15.0], [13.1, 15.0], [13.2, 15.0], [13.3, 15.0], [13.4, 15.0], [13.5, 15.0], [13.6, 15.0], [13.7, 15.0], [13.8, 15.0], [13.9, 15.0], [14.0, 15.0], [14.1, 15.0], [14.2, 15.0], [14.3, 15.0], [14.4, 15.0], [14.5, 15.0], [14.6, 15.0], [14.7, 15.0], [14.8, 15.0], [14.9, 15.0], [15.0, 15.0], [15.1, 15.0], [15.2, 15.0], [15.3, 15.0], [15.4, 15.0], [15.5, 15.0], [15.6, 15.0], [15.7, 15.0], [15.8, 15.0], [15.9, 15.0], [16.0, 15.0], [16.1, 15.0], [16.2, 15.0], [16.3, 15.0], [16.4, 15.0], [16.5, 15.0], [16.6, 15.0], [16.7, 15.0], [16.8, 15.0], [16.9, 15.0], [17.0, 15.0], [17.1, 15.0], [17.2, 15.0], [17.3, 15.0], [17.4, 15.0], [17.5, 15.0], [17.6, 15.0], [17.7, 15.0], [17.8, 15.0], [17.9, 15.0], [18.0, 15.0], [18.1, 15.0], [18.2, 15.0], [18.3, 15.0], [18.4, 15.0], [18.5, 15.0], [18.6, 15.0], [18.7, 15.0], [18.8, 15.0], [18.9, 15.0], [19.0, 15.0], [19.1, 15.0], [19.2, 15.0], [19.3, 15.0], [19.4, 15.0], [19.5, 15.0], [19.6, 15.0], [19.7, 15.0], [19.8, 15.0], [19.9, 15.0], [20.0, 15.0], [20.1, 15.0], [20.2, 15.0], [20.3, 15.0], [20.4, 15.0], [20.5, 15.0], [20.6, 15.0], [20.7, 15.0], [20.8, 15.0], [20.9, 15.0], [21.0, 15.0], [21.1, 15.0], [21.2, 15.0], [21.3, 15.0], [21.4, 15.0], [21.5, 15.0], [21.6, 15.0], [21.7, 15.0], [21.8, 15.0], [21.9, 15.0], [22.0, 15.0], [22.1, 15.0], [22.2, 15.0], [22.3, 15.0], [22.4, 15.0], [22.5, 15.0], [22.6, 15.0], [22.7, 15.0], [22.8, 15.0], [22.9, 15.0], [23.0, 15.0], [23.1, 15.0], [23.2, 15.0], [23.3, 15.0], [23.4, 15.0], [23.5, 15.0], [23.6, 15.0], [23.7, 15.0], [23.8, 15.0], [23.9, 15.0], [24.0, 15.0], [24.1, 15.0], [24.2, 15.0], [24.3, 15.0], [24.4, 15.0], [24.5, 15.0], [24.6, 15.0], [24.7, 15.0], [24.8, 15.0], [24.9, 15.0], [25.0, 15.0], [25.1, 15.0], [25.2, 15.0], [25.3, 15.0], [25.4, 15.0], [25.5, 15.0], [25.6, 15.0], [25.7, 15.0], [25.8, 15.0], [25.9, 15.0], [26.0, 15.0], [26.1, 15.0], [26.2, 15.0], [26.3, 15.0], [26.4, 15.0], [26.5, 15.0], [26.6, 15.0], [26.7, 15.0], [26.8, 15.0], [26.9, 15.0], [27.0, 15.0], [27.1, 15.0], [27.2, 15.0], [27.3, 15.0], [27.4, 15.0], [27.5, 15.0], [27.6, 15.0], [27.7, 15.0], [27.8, 15.0], [27.9, 15.0], [28.0, 15.0], [28.1, 15.0], [28.2, 15.0], [28.3, 15.0], [28.4, 15.0], [28.5, 15.0], [28.6, 15.0], [28.7, 15.0], [28.8, 15.0], [28.9, 15.0], [29.0, 15.0], [29.1, 15.0], [29.2, 15.0], [29.3, 15.0], [29.4, 15.0], [29.5, 15.0], [29.6, 15.0], [29.7, 15.0], [29.8, 15.0], [29.9, 15.0], [30.0, 20.0], [30.1, 20.0], [30.2, 20.0], [30.3, 20.0], [30.4, 20.0], [30.5, 20.0], [30.6, 20.0], [30.7, 20.0], [30.8, 20.0], [30.9, 20.0], [31.0, 20.0], [31.1, 20.0], [31.2, 20.0], [31.3, 20.0], [31.4, 20.0], [31.5, 20.0], [31.6, 20.0], [31.7, 20.0], [31.8, 20.0], [31.9, 20.0], [32.0, 20.0], [32.1, 20.0], [32.2, 20.0], [32.3, 20.0], [32.4, 20.0], [32.5, 20.0], [32.6, 20.0], [32.7, 20.0], [32.8, 20.0], [32.9, 20.0], [33.0, 20.0], [33.1, 20.0], [33.2, 20.0], [33.3, 20.0], [33.4, 20.0], [33.5, 20.0], [33.6, 20.0], [33.7, 20.0], [33.8, 20.0], [33.9, 20.0], [34.0, 20.0], [34.1, 20.0], [34.2, 20.0], [34.3, 20.0], [34.4, 20.0], [34.5, 20.0], [34.6, 20.0], [34.7, 20.0], [34.8, 20.0], [34.9, 20.0], [35.0, 20.0], [35.1, 20.0], [35.2, 20.0], [35.3, 20.0], [35.4, 20.0], [35.5, 20.0], [35.6, 20.0], [35.7, 20.0], [35.8, 20.0], [35.9, 20.0], [36.0, 20.0], [36.1, 20.0], [36.2, 20.0], [36.3, 20.0], [36.4, 20.0], [36.5, 20.0], [36.6, 20.0], [36.7, 20.0], [36.8, 20.0], [36.9, 20.0], [37.0, 20.0], [37.1, 20.0], [37.2, 20.0], [37.3, 20.0], [37.4, 20.0], [37.5, 20.0], [37.6, 20.0], [37.7, 20.0], [37.8, 20.0], [37.9, 20.0], [38.0, 20.0], [38.1, 20.0], [38.2, 20.0], [38.3, 20.0], [38.4, 20.0], [38.5, 20.0], [38.6, 20.0], [38.7, 20.0], [38.8, 20.0], [38.9, 20.0], [39.0, 20.0], [39.1, 20.0], [39.2, 20.0], [39.3, 20.0], [39.4, 20.0], [39.5, 20.0], [39.6, 20.0], [39.7, 20.0], [39.8, 20.0], [39.9, 20.0], [40.0, 21.0], [40.1, 21.0], [40.2, 21.0], [40.3, 21.0], [40.4, 21.0], [40.5, 21.0], [40.6, 21.0], [40.7, 21.0], [40.8, 21.0], [40.9, 21.0], [41.0, 21.0], [41.1, 21.0], [41.2, 21.0], [41.3, 21.0], [41.4, 21.0], [41.5, 21.0], [41.6, 21.0], [41.7, 21.0], [41.8, 21.0], [41.9, 21.0], [42.0, 21.0], [42.1, 21.0], [42.2, 21.0], [42.3, 21.0], [42.4, 21.0], [42.5, 21.0], [42.6, 21.0], [42.7, 21.0], [42.8, 21.0], [42.9, 21.0], [43.0, 21.0], [43.1, 21.0], [43.2, 21.0], [43.3, 21.0], [43.4, 21.0], [43.5, 21.0], [43.6, 21.0], [43.7, 21.0], [43.8, 21.0], [43.9, 21.0], [44.0, 21.0], [44.1, 21.0], [44.2, 21.0], [44.3, 21.0], [44.4, 21.0], [44.5, 21.0], [44.6, 21.0], [44.7, 21.0], [44.8, 21.0], [44.9, 21.0], [45.0, 21.0], [45.1, 21.0], [45.2, 21.0], [45.3, 21.0], [45.4, 21.0], [45.5, 21.0], [45.6, 21.0], [45.7, 21.0], [45.8, 21.0], [45.9, 21.0], [46.0, 21.0], [46.1, 21.0], [46.2, 21.0], [46.3, 21.0], [46.4, 21.0], [46.5, 21.0], [46.6, 21.0], [46.7, 21.0], [46.8, 21.0], [46.9, 21.0], [47.0, 21.0], [47.1, 21.0], [47.2, 21.0], [47.3, 21.0], [47.4, 21.0], [47.5, 21.0], [47.6, 21.0], [47.7, 21.0], [47.8, 21.0], [47.9, 21.0], [48.0, 21.0], [48.1, 21.0], [48.2, 21.0], [48.3, 21.0], [48.4, 21.0], [48.5, 21.0], [48.6, 21.0], [48.7, 21.0], [48.8, 21.0], [48.9, 21.0], [49.0, 21.0], [49.1, 21.0], [49.2, 21.0], [49.3, 21.0], [49.4, 21.0], [49.5, 21.0], [49.6, 21.0], [49.7, 21.0], [49.8, 21.0], [49.9, 21.0], [50.0, 22.0], [50.1, 22.0], [50.2, 22.0], [50.3, 22.0], [50.4, 22.0], [50.5, 22.0], [50.6, 22.0], [50.7, 22.0], [50.8, 22.0], [50.9, 22.0], [51.0, 22.0], [51.1, 22.0], [51.2, 22.0], [51.3, 22.0], [51.4, 22.0], [51.5, 22.0], [51.6, 22.0], [51.7, 22.0], [51.8, 22.0], [51.9, 22.0], [52.0, 22.0], [52.1, 22.0], [52.2, 22.0], [52.3, 22.0], [52.4, 22.0], [52.5, 22.0], [52.6, 22.0], [52.7, 22.0], [52.8, 22.0], [52.9, 22.0], [53.0, 22.0], [53.1, 22.0], [53.2, 22.0], [53.3, 22.0], [53.4, 22.0], [53.5, 22.0], [53.6, 22.0], [53.7, 22.0], [53.8, 22.0], [53.9, 22.0], [54.0, 22.0], [54.1, 22.0], [54.2, 22.0], [54.3, 22.0], [54.4, 22.0], [54.5, 22.0], [54.6, 22.0], [54.7, 22.0], [54.8, 22.0], [54.9, 22.0], [55.0, 22.0], [55.1, 22.0], [55.2, 22.0], [55.3, 22.0], [55.4, 22.0], [55.5, 22.0], [55.6, 22.0], [55.7, 22.0], [55.8, 22.0], [55.9, 22.0], [56.0, 22.0], [56.1, 22.0], [56.2, 22.0], [56.3, 22.0], [56.4, 22.0], [56.5, 22.0], [56.6, 22.0], [56.7, 22.0], [56.8, 22.0], [56.9, 22.0], [57.0, 22.0], [57.1, 22.0], [57.2, 22.0], [57.3, 22.0], [57.4, 22.0], [57.5, 22.0], [57.6, 22.0], [57.7, 22.0], [57.8, 22.0], [57.9, 22.0], [58.0, 22.0], [58.1, 22.0], [58.2, 22.0], [58.3, 22.0], [58.4, 22.0], [58.5, 22.0], [58.6, 22.0], [58.7, 22.0], [58.8, 22.0], [58.9, 22.0], [59.0, 22.0], [59.1, 22.0], [59.2, 22.0], [59.3, 22.0], [59.4, 22.0], [59.5, 22.0], [59.6, 22.0], [59.7, 22.0], [59.8, 22.0], [59.9, 22.0], [60.0, 23.0], [60.1, 23.0], [60.2, 23.0], [60.3, 23.0], [60.4, 23.0], [60.5, 23.0], [60.6, 23.0], [60.7, 23.0], [60.8, 23.0], [60.9, 23.0], [61.0, 23.0], [61.1, 23.0], [61.2, 23.0], [61.3, 23.0], [61.4, 23.0], [61.5, 23.0], [61.6, 23.0], [61.7, 23.0], [61.8, 23.0], [61.9, 23.0], [62.0, 23.0], [62.1, 23.0], [62.2, 23.0], [62.3, 23.0], [62.4, 23.0], [62.5, 23.0], [62.6, 23.0], [62.7, 23.0], [62.8, 23.0], [62.9, 23.0], [63.0, 23.0], [63.1, 23.0], [63.2, 23.0], [63.3, 23.0], [63.4, 23.0], [63.5, 23.0], [63.6, 23.0], [63.7, 23.0], [63.8, 23.0], [63.9, 23.0], [64.0, 23.0], [64.1, 23.0], [64.2, 23.0], [64.3, 23.0], [64.4, 23.0], [64.5, 23.0], [64.6, 23.0], [64.7, 23.0], [64.8, 23.0], [64.9, 23.0], [65.0, 23.0], [65.1, 23.0], [65.2, 23.0], [65.3, 23.0], [65.4, 23.0], [65.5, 23.0], [65.6, 23.0], [65.7, 23.0], [65.8, 23.0], [65.9, 23.0], [66.0, 23.0], [66.1, 23.0], [66.2, 23.0], [66.3, 23.0], [66.4, 23.0], [66.5, 23.0], [66.6, 23.0], [66.7, 23.0], [66.8, 23.0], [66.9, 23.0], [67.0, 23.0], [67.1, 23.0], [67.2, 23.0], [67.3, 23.0], [67.4, 23.0], [67.5, 23.0], [67.6, 23.0], [67.7, 23.0], [67.8, 23.0], [67.9, 23.0], [68.0, 23.0], [68.1, 23.0], [68.2, 23.0], [68.3, 23.0], [68.4, 23.0], [68.5, 23.0], [68.6, 23.0], [68.7, 23.0], [68.8, 23.0], [68.9, 23.0], [69.0, 23.0], [69.1, 23.0], [69.2, 23.0], [69.3, 23.0], [69.4, 23.0], [69.5, 23.0], [69.6, 23.0], [69.7, 23.0], [69.8, 23.0], [69.9, 23.0], [70.0, 23.0], [70.1, 23.0], [70.2, 23.0], [70.3, 23.0], [70.4, 23.0], [70.5, 23.0], [70.6, 23.0], [70.7, 23.0], [70.8, 23.0], [70.9, 23.0], [71.0, 23.0], [71.1, 23.0], [71.2, 23.0], [71.3, 23.0], [71.4, 23.0], [71.5, 23.0], [71.6, 23.0], [71.7, 23.0], [71.8, 23.0], [71.9, 23.0], [72.0, 23.0], [72.1, 23.0], [72.2, 23.0], [72.3, 23.0], [72.4, 23.0], [72.5, 23.0], [72.6, 23.0], [72.7, 23.0], [72.8, 23.0], [72.9, 23.0], [73.0, 23.0], [73.1, 23.0], [73.2, 23.0], [73.3, 23.0], [73.4, 23.0], [73.5, 23.0], [73.6, 23.0], [73.7, 23.0], [73.8, 23.0], [73.9, 23.0], [74.0, 23.0], [74.1, 23.0], [74.2, 23.0], [74.3, 23.0], [74.4, 23.0], [74.5, 23.0], [74.6, 23.0], [74.7, 23.0], [74.8, 23.0], [74.9, 23.0], [75.0, 23.0], [75.1, 23.0], [75.2, 23.0], [75.3, 23.0], [75.4, 23.0], [75.5, 23.0], [75.6, 23.0], [75.7, 23.0], [75.8, 23.0], [75.9, 23.0], [76.0, 23.0], [76.1, 23.0], [76.2, 23.0], [76.3, 23.0], [76.4, 23.0], [76.5, 23.0], [76.6, 23.0], [76.7, 23.0], [76.8, 23.0], [76.9, 23.0], [77.0, 23.0], [77.1, 23.0], [77.2, 23.0], [77.3, 23.0], [77.4, 23.0], [77.5, 23.0], [77.6, 23.0], [77.7, 23.0], [77.8, 23.0], [77.9, 23.0], [78.0, 23.0], [78.1, 23.0], [78.2, 23.0], [78.3, 23.0], [78.4, 23.0], [78.5, 23.0], [78.6, 23.0], [78.7, 23.0], [78.8, 23.0], [78.9, 23.0], [79.0, 23.0], [79.1, 23.0], [79.2, 23.0], [79.3, 23.0], [79.4, 23.0], [79.5, 23.0], [79.6, 23.0], [79.7, 23.0], [79.8, 23.0], [79.9, 23.0], [80.0, 26.0], [80.1, 26.0], [80.2, 26.0], [80.3, 26.0], [80.4, 26.0], [80.5, 26.0], [80.6, 26.0], [80.7, 26.0], [80.8, 26.0], [80.9, 26.0], [81.0, 26.0], [81.1, 26.0], [81.2, 26.0], [81.3, 26.0], [81.4, 26.0], [81.5, 26.0], [81.6, 26.0], [81.7, 26.0], [81.8, 26.0], [81.9, 26.0], [82.0, 26.0], [82.1, 26.0], [82.2, 26.0], [82.3, 26.0], [82.4, 26.0], [82.5, 26.0], [82.6, 26.0], [82.7, 26.0], [82.8, 26.0], [82.9, 26.0], [83.0, 26.0], [83.1, 26.0], [83.2, 26.0], [83.3, 26.0], [83.4, 26.0], [83.5, 26.0], [83.6, 26.0], [83.7, 26.0], [83.8, 26.0], [83.9, 26.0], [84.0, 26.0], [84.1, 26.0], [84.2, 26.0], [84.3, 26.0], [84.4, 26.0], [84.5, 26.0], [84.6, 26.0], [84.7, 26.0], [84.8, 26.0], [84.9, 26.0], [85.0, 26.0], [85.1, 26.0], [85.2, 26.0], [85.3, 26.0], [85.4, 26.0], [85.5, 26.0], [85.6, 26.0], [85.7, 26.0], [85.8, 26.0], [85.9, 26.0], [86.0, 26.0], [86.1, 26.0], [86.2, 26.0], [86.3, 26.0], [86.4, 26.0], [86.5, 26.0], [86.6, 26.0], [86.7, 26.0], [86.8, 26.0], [86.9, 26.0], [87.0, 26.0], [87.1, 26.0], [87.2, 26.0], [87.3, 26.0], [87.4, 26.0], [87.5, 26.0], [87.6, 26.0], [87.7, 26.0], [87.8, 26.0], [87.9, 26.0], [88.0, 26.0], [88.1, 26.0], [88.2, 26.0], [88.3, 26.0], [88.4, 26.0], [88.5, 26.0], [88.6, 26.0], [88.7, 26.0], [88.8, 26.0], [88.9, 26.0], [89.0, 26.0], [89.1, 26.0], [89.2, 26.0], [89.3, 26.0], [89.4, 26.0], [89.5, 26.0], [89.6, 26.0], [89.7, 26.0], [89.8, 26.0], [89.9, 26.0], [90.0, 35.0], [90.1, 35.0], [90.2, 35.0], [90.3, 35.0], [90.4, 35.0], [90.5, 35.0], [90.6, 35.0], [90.7, 35.0], [90.8, 35.0], [90.9, 35.0], [91.0, 35.0], [91.1, 35.0], [91.2, 35.0], [91.3, 35.0], [91.4, 35.0], [91.5, 35.0], [91.6, 35.0], [91.7, 35.0], [91.8, 35.0], [91.9, 35.0], [92.0, 35.0], [92.1, 35.0], [92.2, 35.0], [92.3, 35.0], [92.4, 35.0], [92.5, 35.0], [92.6, 35.0], [92.7, 35.0], [92.8, 35.0], [92.9, 35.0], [93.0, 35.0], [93.1, 35.0], [93.2, 35.0], [93.3, 35.0], [93.4, 35.0], [93.5, 35.0], [93.6, 35.0], [93.7, 35.0], [93.8, 35.0], [93.9, 35.0], [94.0, 35.0], [94.1, 35.0], [94.2, 35.0], [94.3, 35.0], [94.4, 35.0], [94.5, 35.0], [94.6, 35.0], [94.7, 35.0], [94.8, 35.0], [94.9, 35.0], [95.0, 35.0], [95.1, 35.0], [95.2, 35.0], [95.3, 35.0], [95.4, 35.0], [95.5, 35.0], [95.6, 35.0], [95.7, 35.0], [95.8, 35.0], [95.9, 35.0], [96.0, 35.0], [96.1, 35.0], [96.2, 35.0], [96.3, 35.0], [96.4, 35.0], [96.5, 35.0], [96.6, 35.0], [96.7, 35.0], [96.8, 35.0], [96.9, 35.0], [97.0, 35.0], [97.1, 35.0], [97.2, 35.0], [97.3, 35.0], [97.4, 35.0], [97.5, 35.0], [97.6, 35.0], [97.7, 35.0], [97.8, 35.0], [97.9, 35.0], [98.0, 35.0], [98.1, 35.0], [98.2, 35.0], [98.3, 35.0], [98.4, 35.0], [98.5, 35.0], [98.6, 35.0], [98.7, 35.0], [98.8, 35.0], [98.9, 35.0], [99.0, 35.0], [99.1, 35.0], [99.2, 35.0], [99.3, 35.0], [99.4, 35.0], [99.5, 35.0], [99.6, 35.0], [99.7, 35.0], [99.8, 35.0], [99.9, 35.0]], "isOverall": false, "label": "Execute visit- After stress", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 245.0, "series": [{"data": [[0.0, 10.0]], "isOverall": false, "label": "Visit the system page-After stress", "isController": false}, {"data": [[600.0, 2.0], [700.0, 12.0], [200.0, 84.0], [800.0, 23.0], [900.0, 36.0], [1000.0, 7.0], [1100.0, 12.0], [300.0, 149.0], [1200.0, 9.0], [1300.0, 37.0], [1400.0, 6.0], [100.0, 147.0], [400.0, 46.0], [500.0, 30.0]], "isOverall": false, "label": "Excecute logout", "isController": false}, {"data": [[0.0, 245.0], [1100.0, 3.0], [300.0, 58.0], [600.0, 3.0], [700.0, 18.0], [100.0, 108.0], [200.0, 64.0], [400.0, 8.0], [800.0, 19.0], [900.0, 66.0], [500.0, 6.0], [1000.0, 2.0]], "isOverall": false, "label": "Excecute Leave", "isController": false}, {"data": [[0.0, 10.0]], "isOverall": false, "label": "Execute visit- After stress", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 291.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 566.0, "series": [{"data": [[0.0, 566.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 291.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 363.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.6563648E12, "maxY": 381.4991666666665, "series": [{"data": [[1.6563648E12, 1.0]], "isOverall": false, "label": "Recovery check", "isController": false}, {"data": [[1.6563648E12, 381.4991666666665]], "isOverall": false, "label": "400-Logout And Leave", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6563648E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.6666666666666667, "minX": 1.0, "maxY": 1417.3333333333333, "series": [{"data": [[1.0, 4.1]], "isOverall": false, "label": "Visit the system page-After stress", "isController": false}, {"data": [[1.0, 4.1]], "isOverall": false, "label": "Visit the system page-After stress-Aggregated", "isController": false}, {"data": [[3.0, 1396.0], [12.0, 1392.0], [18.0, 1375.0], [23.0, 1417.3333333333333], [26.0, 1373.5], [39.0, 1415.0], [48.0, 1411.0], [55.0, 1384.0], [56.0, 1379.0], [59.0, 1361.0], [67.0, 1392.0], [66.0, 1403.0], [70.0, 1399.0], [81.0, 1373.0], [85.0, 1391.0], [84.0, 1354.0], [91.0, 1388.0], [88.0, 1381.0], [94.0, 1374.0], [93.0, 1358.5], [98.0, 1380.0], [100.0, 1381.0], [104.0, 1357.5], [109.0, 1327.0], [113.0, 1345.0], [124.0, 1364.0], [135.0, 1325.0], [129.0, 1349.0], [143.0, 1328.0], [142.0, 1306.0], [141.0, 1332.0], [150.0, 1222.0], [146.0, 1233.0], [145.0, 1246.0], [144.0, 1290.2], [157.0, 1237.0], [155.0, 1199.0], [190.0, 1148.0], [198.0, 1135.0], [197.0, 1137.0], [195.0, 1150.0], [194.0, 1113.0], [206.0, 1152.0], [203.0, 1124.0], [215.0, 1100.0], [214.0, 1134.0], [210.0, 1110.0], [223.0, 1065.5], [222.0, 1080.0], [221.0, 1059.0], [237.0, 998.0], [244.0, 957.0], [243.0, 979.0], [242.0, 1020.0], [240.0, 1029.0], [255.0, 847.0], [253.0, 916.5555555555555], [252.0, 917.0], [251.0, 946.0], [250.0, 956.0909090909091], [249.0, 979.0], [248.0, 963.4], [264.0, 840.6666666666666], [262.0, 856.25], [261.0, 824.0], [258.0, 844.0], [257.0, 848.0], [256.0, 859.25], [294.0, 787.0], [290.0, 788.5], [317.0, 784.0], [315.0, 752.0], [304.0, 761.0], [328.0, 638.0], [327.0, 758.0], [326.0, 769.3333333333334], [351.0, 543.0], [345.0, 554.0], [367.0, 531.0], [365.0, 547.0], [363.0, 538.0], [359.0, 582.5], [358.0, 545.0], [356.0, 588.0], [353.0, 572.0], [383.0, 479.0], [381.0, 507.0], [377.0, 515.0], [375.0, 519.5], [374.0, 510.0], [371.0, 532.6666666666666], [368.0, 568.0], [399.0, 477.0], [395.0, 506.0], [393.0, 509.0], [392.0, 502.0], [397.0, 461.0], [387.0, 473.0], [386.0, 513.0], [385.0, 490.0], [402.0, 465.0], [401.0, 463.8], [400.0, 470.66666666666663], [476.0, 411.75], [479.0, 385.0], [481.0, 414.0], [482.0, 390.8437499999999], [522.0, 323.5], [521.0, 315.0], [518.0, 344.6607142857144], [513.0, 366.25806451612914], [567.0, 293.0], [566.0, 270.0], [563.0, 325.0], [559.0, 327.0], [558.0, 209.0], [555.0, 330.0], [574.0, 188.21126760563376], [550.0, 286.0], [600.0, 193.18181818181824], [599.0, 204.2], [597.0, 186.26229508196715], [596.0, 181.0], [592.0, 174.0], [590.0, 150.66666666666666], [585.0, 188.0], [584.0, 170.79166666666669], [579.0, 138.0], [576.0, 201.0]], "isOverall": false, "label": "Excecute logout", "isController": false}, {"data": [[451.26666666666654, 481.7550000000003]], "isOverall": false, "label": "Excecute logout-Aggregated", "isController": false}, {"data": [[3.0, 988.5], [7.0, 497.49999999999994], [8.0, 974.0], [9.0, 917.0], [11.0, 953.5], [12.0, 1194.0], [14.0, 484.5], [17.0, 828.0], [18.0, 993.0], [20.0, 2.5], [21.0, 3.0], [23.0, 457.5], [24.0, 999.0], [26.0, 978.5], [29.0, 968.6666666666666], [33.0, 698.75], [34.0, 799.0], [36.0, 967.5], [39.0, 641.3333333333333], [40.0, 954.0], [43.0, 599.6666666666666], [47.0, 467.25], [48.0, 970.0], [51.0, 637.3333333333334], [53.0, 458.0], [55.0, 3.5], [56.0, 957.0], [59.0, 906.3333333333334], [61.0, 959.0], [60.0, 3.0], [67.0, 940.0], [66.0, 3.0], [64.0, 634.0], [71.0, 840.0], [70.0, 949.0], [69.0, 936.0], [68.0, 954.0], [75.0, 416.49999999999994], [78.0, 961.0], [77.0, 466.0], [81.0, 323.0], [87.0, 4.0], [85.0, 940.0], [84.0, 388.66666666666663], [91.0, 921.0], [90.0, 878.5], [88.0, 952.0], [94.0, 939.0], [93.0, 3.5], [99.0, 5.0], [98.0, 468.5], [96.0, 925.5], [102.0, 889.0], [101.0, 831.0], [100.0, 789.0], [107.0, 440.0], [105.0, 5.0], [104.0, 437.5], [111.0, 917.0], [110.0, 12.0], [109.0, 925.0], [108.0, 864.0], [115.0, 443.5], [113.0, 430.0], [119.0, 289.0], [116.0, 70.0], [123.0, 484.5], [121.0, 57.0], [126.0, 26.0], [125.0, 48.0], [124.0, 12.0], [135.0, 36.0], [134.0, 910.5], [132.0, 911.0], [131.0, 912.0], [130.0, 906.0], [129.0, 922.0], [128.0, 106.0], [143.0, 1091.0], [142.0, 864.0], [141.0, 829.0], [139.0, 21.0], [138.0, 97.0], [137.0, 902.0], [136.0, 1109.0], [151.0, 375.33333333333337], [150.0, 1024.0], [148.0, 106.0], [146.0, 274.0], [145.0, 862.0], [144.0, 798.0], [158.0, 59.0], [157.0, 83.5], [155.0, 88.0], [154.0, 80.0], [153.0, 419.0], [166.0, 483.3333333333333], [163.0, 183.66666666666666], [160.0, 134.0], [175.0, 302.0], [174.0, 257.5], [172.0, 265.0], [170.0, 253.0], [169.0, 297.0], [168.0, 235.0], [183.0, 193.5], [178.0, 140.0], [177.0, 21.0], [190.0, 126.0], [189.0, 137.0], [187.0, 187.0], [185.0, 171.66666666666666], [184.0, 17.0], [198.0, 574.0], [197.0, 230.5], [195.0, 184.0], [194.0, 185.0], [193.0, 207.0], [192.0, 180.5], [206.0, 273.0], [204.0, 274.0], [203.0, 271.5], [201.0, 204.0], [200.0, 210.5], [215.0, 212.0], [214.0, 222.0], [213.0, 192.0], [211.0, 262.0], [210.0, 272.0], [209.0, 271.0], [208.0, 263.0], [223.0, 257.0], [222.0, 102.0], [221.0, 164.0], [219.0, 226.0], [218.0, 258.0], [217.0, 197.0], [231.0, 269.0], [230.0, 809.0], [229.0, 572.0], [228.0, 247.0], [227.0, 248.5], [225.0, 277.0], [224.0, 816.0], [239.0, 781.0], [237.0, 247.0], [236.0, 786.0], [235.0, 530.5], [233.0, 548.0], [232.0, 187.0], [246.0, 446.0], [245.0, 759.0], [244.0, 762.0], [243.0, 772.0], [242.0, 225.0], [241.0, 778.0], [240.0, 780.0], [255.0, 453.0], [253.0, 695.0], [252.0, 33.0], [251.0, 39.0], [250.0, 739.0], [249.0, 737.0], [248.0, 481.0], [269.0, 345.0], [270.0, 342.0], [268.0, 91.0], [259.0, 372.0], [258.0, 107.0], [257.0, 648.0], [256.0, 123.0], [267.0, 352.0], [266.0, 292.0], [265.0, 343.0], [264.0, 344.5], [262.0, 423.0], [261.0, 312.0], [260.0, 270.0], [287.0, 335.5], [285.0, 307.0], [282.0, 313.3333333333333], [279.0, 304.0], [278.0, 256.0], [277.0, 354.3333333333333], [274.0, 409.0], [272.0, 373.0], [302.0, 363.0], [303.0, 364.0], [301.0, 352.0], [300.0, 365.5], [298.0, 363.0], [297.0, 298.0], [296.0, 364.0], [294.0, 351.0], [289.0, 324.0], [288.0, 325.0], [291.0, 352.0], [290.0, 332.0], [293.0, 296.0], [292.0, 350.0], [317.0, 332.0], [319.0, 358.0], [316.0, 336.0], [305.0, 345.0], [304.0, 345.0], [315.0, 342.0], [314.0, 360.0], [313.0, 351.0], [311.0, 355.5], [310.0, 342.0], [308.0, 312.3333333333333], [334.0, 162.0], [335.0, 148.0], [333.0, 178.0], [322.0, 333.0], [320.0, 353.5], [331.0, 207.0], [330.0, 153.0], [328.0, 568.0], [327.0, 540.0], [326.0, 330.0], [325.0, 346.0], [324.0, 339.0], [350.0, 128.0], [351.0, 142.0], [349.0, 162.66666666666666], [339.0, 145.0], [338.0, 163.0], [337.0, 171.0], [336.0, 162.0], [346.0, 152.0], [345.0, 154.0], [344.0, 153.0], [343.0, 57.0], [342.0, 153.0], [341.0, 149.0], [366.0, 165.0], [367.0, 165.0], [365.0, 193.0], [364.0, 168.0], [363.0, 185.0], [362.0, 199.0], [360.0, 173.0], [359.0, 163.0], [353.0, 196.0], [358.0, 181.4], [381.0, 290.0], [382.0, 284.0], [380.0, 267.0], [371.0, 139.0], [370.0, 334.0], [369.0, 208.0], [368.0, 144.0], [379.0, 295.0], [378.0, 123.0], [377.0, 135.0], [375.0, 149.0], [374.0, 144.5], [372.0, 148.0], [399.0, 97.0], [397.0, 175.0], [395.0, 161.33333333333334], [392.0, 119.33333333333333], [391.0, 126.0], [387.0, 131.0], [386.0, 318.0], [385.0, 174.33333333333334], [402.0, 260.0], [401.0, 267.0], [400.0, 123.0], [479.0, 35.9090909090909], [476.0, 193.0], [475.0, 198.0], [474.0, 206.0], [494.0, 1.0], [491.0, 1.6666666666666667], [486.0, 2.0], [481.0, 2.5], [482.0, 160.25000000000003], [484.0, 1.6666666666666667], [485.0, 1.5], [511.0, 2.0], [510.0, 1.0], [501.0, 2.0], [504.0, 2.2], [505.0, 1.2222222222222223], [519.0, 2.0], [540.0, 12.5], [542.0, 2.0], [538.0, 1.0], [535.0, 8.0], [530.0, 1.0], [526.0, 1.8333333333333335], [524.0, 2.0], [525.0, 1.5], [516.0, 1.0], [518.0, 126.33333333333334], [513.0, 25.771428571428576], [571.0, 1.0], [574.0, 2.741935483870968], [570.0, 16.5], [568.0, 1.0], [567.0, 1.5833333333333333], [565.0, 117.0], [563.0, 1.0], [575.0, 1.0], [549.0, 1.0], [550.0, 1.0], [548.0, 35.0], [545.0, 4.0], [544.0, 1.0], [594.0, 1.0], [600.0, 24.666666666666668], [597.0, 1.0], [596.0, 1.0], [595.0, 0.6666666666666667], [592.0, 1.0], [590.0, 1.0], [576.0, 1.0], [577.0, 1.0], [579.0, 27.0], [578.0, 6.0], [589.0, 2.0], [588.0, 1.5], [587.0, 1.0], [585.0, 2.0], [584.0, 9.0], [1.0, 2.0]], "isOverall": false, "label": "Excecute Leave", "isController": false}, {"data": [[311.7266666666671, 271.7116666666666]], "isOverall": false, "label": "Excecute Leave-Aggregated", "isController": false}, {"data": [[1.0, 21.3]], "isOverall": false, "label": "Execute visit- After stress", "isController": false}, {"data": [[1.0, 21.3]], "isOverall": false, "label": "Execute visit- After stress-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3242.733333333333, "minX": 1.6563648E12, "maxY": 21627.5, "series": [{"data": [[1.6563648E12, 21627.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6563648E12, 3242.733333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6563648E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4.1, "minX": 1.6563648E12, "maxY": 481.7550000000003, "series": [{"data": [[1.6563648E12, 4.1]], "isOverall": false, "label": "Visit the system page-After stress", "isController": false}, {"data": [[1.6563648E12, 481.7550000000003]], "isOverall": false, "label": "Excecute logout", "isController": false}, {"data": [[1.6563648E12, 271.7116666666666]], "isOverall": false, "label": "Excecute Leave", "isController": false}, {"data": [[1.6563648E12, 21.3]], "isOverall": false, "label": "Execute visit- After stress", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6563648E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 4.1, "minX": 1.6563648E12, "maxY": 422.0983333333336, "series": [{"data": [[1.6563648E12, 4.1]], "isOverall": false, "label": "Visit the system page-After stress", "isController": false}, {"data": [[1.6563648E12, 422.0983333333336]], "isOverall": false, "label": "Excecute logout", "isController": false}, {"data": [[1.6563648E12, 270.59999999999985]], "isOverall": false, "label": "Excecute Leave", "isController": false}, {"data": [[1.6563648E12, 21.2]], "isOverall": false, "label": "Execute visit- After stress", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6563648E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.6563648E12, "maxY": 151.195, "series": [{"data": [[1.6563648E12, 0.8]], "isOverall": false, "label": "Visit the system page-After stress", "isController": false}, {"data": [[1.6563648E12, 151.195]], "isOverall": false, "label": "Excecute logout", "isController": false}, {"data": [[1.6563648E12, 0.7249999999999996]], "isOverall": false, "label": "Excecute Leave", "isController": false}, {"data": [[1.6563648E12, 0.6]], "isOverall": false, "label": "Execute visit- After stress", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6563648E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.6563648E12, "maxY": 1425.0, "series": [{"data": [[1.6563648E12, 1425.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6563648E12, 983.4000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6563648E12, 1395.42]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6563648E12, 1307.8999999999983]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6563648E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6563648E12, 363.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6563648E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 4.0, "maxY": 768.0, "series": [{"data": [[4.0, 11.0], [730.0, 343.0], [6.0, 12.5], [7.0, 20.0], [473.0, 768.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[730.0, 144.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 730.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 4.0, "maxY": 768.0, "series": [{"data": [[4.0, 11.0], [730.0, 343.0], [6.0, 12.5], [7.0, 20.0], [473.0, 768.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[730.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 730.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 20.333333333333332, "minX": 1.6563648E12, "maxY": 20.333333333333332, "series": [{"data": [[1.6563648E12, 20.333333333333332]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6563648E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.05, "minX": 1.6563648E12, "maxY": 14.283333333333333, "series": [{"data": [[1.6563648E12, 14.283333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6563648E12, 6.05]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6563648E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.6563648E12, "maxY": 7.15, "series": [{"data": [[1.6563648E12, 7.15]], "isOverall": false, "label": "Excecute Leave-success", "isController": false}, {"data": [[1.6563648E12, 0.16666666666666666]], "isOverall": false, "label": "Execute visit- After stress-success", "isController": false}, {"data": [[1.6563648E12, 3.2]], "isOverall": false, "label": "Excecute logout-failure", "isController": false}, {"data": [[1.6563648E12, 2.85]], "isOverall": false, "label": "Excecute Leave-failure", "isController": false}, {"data": [[1.6563648E12, 6.8]], "isOverall": false, "label": "Excecute logout-success", "isController": false}, {"data": [[1.6563648E12, 0.16666666666666666]], "isOverall": false, "label": "Visit the system page-After stress-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6563648E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.05, "minX": 1.6563648E12, "maxY": 14.283333333333333, "series": [{"data": [[1.6563648E12, 14.283333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6563648E12, 6.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6563648E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

